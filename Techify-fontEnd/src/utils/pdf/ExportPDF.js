import jsPDF from "jspdf";
import NotoSansThai from "../fonts/NotoSansThai"; // ‚úÖ ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å URL ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô Base64
const loadImageAsBase64 = async (url) => {
  return new Promise((resolve, reject) => {
    const img = new Image();
    img.crossOrigin = "Anonymous";
    img.onload = () => {
      const canvas = document.createElement("canvas");
      canvas.width = img.width;
      canvas.height = img.height;
      const ctx = canvas.getContext("2d");
      ctx.drawImage(img, 0, 0);
      resolve(canvas.toDataURL("image/jpeg"));
    };
    img.onerror = (err) => {
      console.error("‚ùå Error loading image:", err);
      reject(err);
    };
    img.src = url;
  });
};

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á PDF (‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô)
export const generatePDF = async (data) => {
  if (!Array.isArray(data) || data.length === 0) {
    console.error("‚ùå No data to generate PDF");
    return;
  }

  const doc = new jsPDF("p", "mm", "a4"); // ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏© A4

  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
  doc.addFileToVFS("NotoSansThai.ttf", NotoSansThai);
  doc.addFont("NotoSansThai.ttf", "NotoSansThai", "normal");
  doc.setFont("NotoSansThai");

  for (let index = 0; index < data.length; index++) {
    const job = data[index];

    if (index !== 0) {
      doc.addPage();
    }

    // ‚úÖ ‡∏´‡∏±‡∏ß‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
    doc.setFontSize(18);
    doc.setTextColor(0, 51, 102);
    doc.text("üìù ‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô", 80, 15);

    doc.setFontSize(12);
    doc.setTextColor(100);
    doc.text(`üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£: ${new Date().toLocaleDateString()}`, 14, 25);

    let startY = 35;

    // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    if (job.profileImage) {
      try {
        const profileBase64 = await loadImageAsBase64(job.profileImage);
        doc.addImage(profileBase64, "JPEG", 160, startY, 30, 30);
      } catch (error) {
        console.error("‚ùå Error loading profile image:", error);
      }
    }

    startY += 10;

    // ‚úÖ ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£
    doc.setFontSize(14);
    doc.setTextColor(0);
    doc.text(
      `üìå ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£: ${job.Job?.JobName || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}`,
      14,
      startY
    );
    startY += 8;
    doc.text(`üìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô: ${job.Job?.Location || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}`, 14, startY);
    startY += 8;
    doc.text(
      `üìú ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô: ${job.Job?.Description || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"}`,
      14,
      startY
    );
    startY += 12;

    doc.line(14, startY, 190, startY);
    startY += 10;

    // ‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
    doc.setFontSize(14);
    doc.setTextColor(0, 51, 102);
    doc.text("üë§ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß", 14, startY);
    startY += 8;

    doc.setFontSize(12);
    doc.setTextColor(0);
    doc.text(`üìù ‡∏ä‡∏∑‡πà‡∏≠: ${job.personalInfo.fullName || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}`, 20, startY);
    startY += 7;
    doc.text(
      `üìß ‡∏≠‡∏µ‡πÄ‡∏°‡∏•: ${job.personalInfo.contact?.email || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}`,
      20,
      startY
    );
    startY += 7;
    doc.text(
      `üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: ${job.personalInfo.contact?.phone || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}`,
      20,
      startY
    );
    startY += 7;
    doc.text(
      `üè† ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: ${job.personalInfo.address || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}`,
      20,
      startY
    );
    startY += 10;

    doc.line(14, startY, 190, startY);
    startY += 10;

    // ‚úÖ ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤
    if (job.educationHistory?.length > 0) {
      doc.setFontSize(14);
      doc.setTextColor(0, 51, 102);
      doc.text("üéì ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤", 14, startY);
      startY += 8;

      doc.setFontSize(12);
      doc.setTextColor(0);
      job.educationHistory.forEach((edu, i) => {
        doc.text(
          `üìå ${edu.degree} - ${edu.university} (${edu.year})`,
          20,
          startY + i * 7
        );
      });

      startY += job.educationHistory.length * 7 + 10;
    }

    doc.line(14, startY, 190, startY);
    startY += 10;

    // ‚úÖ ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
    if (job.workHistory?.length > 0) {
      doc.setFontSize(14);
      doc.setTextColor(0, 51, 102);
      doc.text("üíº ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", 14, startY);
      startY += 8;

      doc.setFontSize(12);
      doc.setTextColor(0);
      job.workHistory.forEach((work, i) => {
        doc.text(
          `üìå ${work.position} - ${work.company} (${work.duration})`,
          20,
          startY + i * 7
        );
      });

      startY += job.workHistory.length * 7 + 10;
    }

    doc.line(14, startY, 190, startY);
    startY += 10;

    // ‚úÖ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡πÄ‡∏®‡∏©
    if (job.specialSkills) {
      doc.setFontSize(14);
      doc.setTextColor(0, 51, 102);
      doc.text("üåü ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡πÄ‡∏®‡∏©", 14, startY);
      startY += 8;

      doc.setFontSize(12);
      doc.setTextColor(0);
      doc.text(job.specialSkills, 20, startY);
      startY += 10;
    }

    doc.line(14, startY, 190, startY);
    startY += 10;

    // ‚úÖ ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏ô‡∏ö (Citizen ID ‡πÅ‡∏•‡∏∞ Resume)
    doc.setFontSize(14);
    doc.setTextColor(0, 51, 102);
    doc.text("üìÑ ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏ô‡∏ö", 14, startY);
    startY += 10;

    if (job.attachedFiles) {
      if (job.attachedFiles.citizen_id) {
        try {
          const citizenBase64 = await loadImageAsBase64(
            job.attachedFiles.citizen_id
          );
          doc.addImage(citizenBase64, "JPEG", 20, startY, 50, 30);
        } catch (error) {
          console.error("‚ùå Error loading citizen ID:", error);
        }
      }
      if (job.attachedFiles.resume) {
        try {
          const resumeBase64 = await loadImageAsBase64(
            job.attachedFiles.resume
          );
          doc.addImage(resumeBase64, "JPEG", 80, startY, 50, 30);
        } catch (error) {
          console.error("‚ùå Error loading resume:", error);
        }
      }
    }
  }

  // ‚úÖ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå PDF
  doc.save("‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô.pdf");
};
