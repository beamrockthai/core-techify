import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { register } from "../api/authApi";
import InputField from "../components/InputField";

const RegisterPage = () => {
  const [formData, setFormData] = useState({
    firstName: "",
    lastName: "",
    email: "",
    password: "",
    phoneNumber: "",
    nationalId: "",
    birhDate: "",
    houseNumber: "",
    village: "",
    province: "",
    district: "",
    subDistrict: "",
    postalCode: "",
  });

  const [error, setError] = useState("");
  const [success, setSuccess] = useState(false);
  const [loading, setLoading] = useState(false); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏≠
  const navigate = useNavigate();

  const handleChange = (e) => {
    const { name, value } = e.target;
    let newValue = value;

    if (name === "birhDate" && value) {
      let year = parseInt(value.split("-")[0], 10);
      if (year > 2500) {
        year -= 543;
        newValue = `${year}-${value.split("-")[1]}-${value.split("-")[2]}`;
      }
    }

    setFormData((prevData) => ({
      ...prevData,
      [name]: newValue || "",
    }));
  };

  const handleRegister = async (e) => {
    e.preventDefault();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const isFormComplete = Object.values(formData).every(
      (value) => value.trim() !== ""
    );
    if (!isFormComplete) {
      setError("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö");
      return;
    }

    setLoading(true); // ‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏≠
    try {
      console.log("üì° Sending data to backend:", formData);
      const data = await register(formData);
      console.log("‚úÖ Register successful:", data);
      setError("");
      setSuccess(true);
      setTimeout(() => {
        setLoading(false); // ‡∏õ‡∏¥‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏≠
        navigate("/jobs");
      }, 3000); // ‡∏£‡∏≠ 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤
    } catch (err) {
      console.error("‚ùå Register failed:", err);
      setError(err.message || "‚ùå Register failed");
      setLoading(false); // ‡∏õ‡∏¥‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏≠
    }
  };

  return (
    <div className="flex items-center justify-center min-h-screen bg-gray-100">
      <div className="card w-full max-w-4xl bg-white shadow-xl p-5">
        <h2 className="text-2xl font-bold text-center mb-4">‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</h2>

        {error && <p className="text-red-500 text-sm mb-4">{error}</p>}

        {success && (
          <div className="modal modal-open">
            <div className="modal-box">
              <h3 className="font-bold text-lg">‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</h3>
              <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏≤‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô...</p>
            </div>
          </div>
        )}

        <form onSubmit={handleRegister} className="grid grid-cols-3 gap-4">
          <InputField
            label="‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á"
            type="text"
            name="firstName"
            value={formData.firstName}
            onChange={handleChange}
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á"
          />

          <InputField
            label="‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•"
            type="text"
            name="lastName"
            value={formData.lastName}
            onChange={handleChange}
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•"
          />

          <InputField
            label="‡∏≠‡∏µ‡πÄ‡∏°‡∏•"
            type="email"
            name="email"
            value={formData.email}
            onChange={handleChange}
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•"
          />

          <InputField
            label="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô"
            type="password"
            name="password"
            value={formData.password}
            onChange={handleChange}
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô"
          />

          <InputField
            label="‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå"
            type="text"
            name="phoneNumber"
            value={formData.phoneNumber}
            onChange={handleChange}
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå"
          />

          <InputField
            label="‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô"
            type="text"
            name="nationalId"
            value={formData.nationalId}
            onChange={handleChange}
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô"
          />

          <InputField
            label="‡∏ß‡∏±‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏õ‡∏µ‡πÄ‡∏Å‡∏¥‡∏î"
            type="date"
            name="birhDate"
            value={formData.birhDate}
            onChange={handleChange}
            placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏õ‡∏µ‡πÄ‡∏Å‡∏¥‡∏î"
          />

          <InputField
            label="‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà"
            type="text"
            name="houseNumber"
            value={formData.houseNumber}
            onChange={handleChange}
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà"
          />

          <InputField
            label="‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô"
            type="text"
            name="village"
            value={formData.village}
            onChange={handleChange}
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô"
          />

          <InputField
            label="‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î"
            type="text"
            name="province"
            value={formData.province}
            onChange={handleChange}
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î"
          />

          <InputField
            label="‡∏≠‡∏≥‡πÄ‡∏†‡∏≠"
            type="text"
            name="district"
            value={formData.district}
            onChange={handleChange}
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏≥‡πÄ‡∏†‡∏≠"
          />

          <InputField
            label="‡∏ï‡∏≥‡∏ö‡∏•"
            type="text"
            name="subDistrict"
            value={formData.subDistrict}
            onChange={handleChange}
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏≥‡∏ö‡∏•"
          />

          <InputField
            label="‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå"
            type="text"
            name="postalCode"
            value={formData.postalCode}
            onChange={handleChange}
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå"
          />

          <div className="col-span-3 flex justify-center gap-4 mt-6">
            <button
              className="btn btn-outline btn-primary w-full md:w-auto"
              type="button"
              onClick={() => navigate("/login")}
            >
              ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
            </button>
            <button
              className={`btn btn-primary w-full md:w-auto ${
                loading ? "btn-disabled" : ""
              }`}
              type="submit"
              disabled={loading}
            >
              ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
            </button>
          </div>
        </form>

        {loading && (
          <div className="fixed inset-0 flex items-center justify-center bg-gray-500 bg-opacity-50">
            <div className="bg-white p-4 rounded shadow-lg">
              <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å...</p>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default RegisterPage;
