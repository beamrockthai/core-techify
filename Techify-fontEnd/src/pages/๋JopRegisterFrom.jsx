import React, { useEffect, useState } from "react";
import { useNavigate, useParams } from "react-router-dom"; // тЬЕ р╣Гр╕Кр╣Й navigate
import UploadBoxFrom from "../components/UploadBoxFrom";
import InputFrom from "../components/InputFrom";
import { registerJob } from "../api/registerJob"; // тЬЕ р╕Щр╕│р╣Ар╕Вр╣Йр╕▓ API
// import { getJobById } from "../api/jobApi";

function RegisterFromPage() {
  console.log("тЬЕ RegisterFromPage rendering...");
  const navigate = useNavigate();
  const { jobId } = useParams();

  // тЬЕ р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓ jobId р╣Ар╕Ыр╣Зр╕Щ UUID р╕Ир╕гр╕┤р╕З
  if (!jobId || !/^[0-9a-fA-F-]{36}$/.test(jobId)) {
    alert("тЭМ jobId р╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З р╕лр╕гр╕╖р╕нр╣Др╕бр╣Ир╣Др╕Фр╣Йр╕гр╕▒р╕Ър╕Др╣Ир╕▓");
    return;
  }

  // тЬЕ State р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╣Ир╕зр╕Щр╕Хр╕▒р╕зр╕Ир╕▓р╕Б InputFrom
  const [personalData, setPersonalData] = useState({});
  const handleInputChange = (newData) => {
    setPersonalData((prevData) => ({ ...prevData, ...newData }));
  };

  // тЬЕ State р╕кр╕│р╕лр╕гр╕▒р╕Ър╣Др╕Яр╕ер╣Мр╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Ф
  const [uploadedFiles, setUploadedFiles] = useState({
    profileImage: null,
    idCardImage: null,
    houseRegistrationImage: null,
    degreeCertificateImage: null,
    transcriptImage: null,
    workCertificateImage: null,
    medicalCertificateImage: null,
    criminalRecordImage: null,
    passportImage: null,
    drivingLicenseImage: null,
    attachedFiles: [],
  });

  // тЬЕ р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╣Др╕Яр╕ер╣Мр╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Ф
  const handleFileSelect = (field, file) => {
    setUploadedFiles((prev) => ({ ...prev, [field]: file }));
  };

  // тЬЕ р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╕Ир╕│р╣Ар╕Ыр╣Зр╕Щ
  const validateForm = () => {
    return (
      personalData.firstName &&
      personalData.lastName &&
      uploadedFiles.profileImage
    );
  };

  // тЬЕ р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕кр╣Ир╕Зр╕Яр╕нр╕гр╣Мр╕бр╣Др╕Ыр╕вр╕▒р╕З API
  const handleSubmit = async () => {
    if (!validateForm()) {
      alert("тЭМ р╕Бр╕гр╕╕р╕Ур╕▓р╕Бр╕гр╕нр╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Гр╕лр╣Йр╕Др╕гр╕Ър╣Бр╕ер╕░р╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Фр╕гр╕╣р╕Ыр╕Цр╣Ир╕▓р╕вр╕Вр╕Щр╕▓р╕Ф 1 р╕Щр╕┤р╣Йр╕з");
      return;
    }

    // тЬЕ Popup р╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Бр╣Ир╕нр╕Щр╕кр╣Ир╕З
    const isConfirmed = window.confirm(
      "ЁЯУй р╕Др╕╕р╕Ур╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Бр╕▓р╕гр╕кр╕бр╕▒р╕Др╕гр╕Зр╕▓р╕Щр╕лр╕гр╕╖р╕нр╣Др╕бр╣И?"
    );
    if (!isConfirmed) return;

    const formData = new FormData();
    formData.append("jobId", jobId);
    formData.append("personalInfo", JSON.stringify(personalData));

    // тЬЕ р╣Ар╕Юр╕┤р╣Ир╕бр╣Др╕Яр╕ер╣Мр╣Ар╕Вр╣Йр╕▓ FormData
    Object.entries(uploadedFiles).forEach(([key, file]) => {
      if (file?.file) formData.append(key, file.file);
    });

    try {
      const response = await registerJob(formData);
      console.log("тЬЕ р╕кр╕бр╕▒р╕Др╕гр╕Зр╕▓р╕Щр╕кр╕│р╣Ар╕гр╣Зр╕И:", response);

      if (response.success) {
        alert("ЁЯОЙ р╕кр╕бр╕▒р╕Др╕гр╕Зр╕▓р╕Щр╕кр╕│р╣Ар╕гр╣Зр╕И! р╕Бр╕│р╕ер╕▒р╕Зр╣Др╕Ыр╕вр╕▒р╕Зр╕лр╕Щр╣Йр╕▓р╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤р╕Бр╕▓р╕гр╕кр╕бр╕▒р╕Др╕гр╕Зр╕▓р╕Щ...");

        setIsLoggedIn(true); // тЬЕ р╕Ър╕▒р╕Зр╕Др╕▒р╕Ър╣Гр╕лр╣Йр╕нр╕▒р╕Ыр╣Ар╕Фр╕Х Token р╣Ар╕Ыр╣Зр╕Щ Logged In
        navigate("/job-history");
      } else {
        alert("тЭМ р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф: " + response.message);
      }
    } catch (error) {
      console.error("тЭМ р╕кр╕бр╕▒р╕Др╕гр╕Зр╕▓р╕Щр╕ер╣Йр╕бр╣Ар╕лр╕ер╕з:", error);
      alert("тЭМ р╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Фр╣Др╕Яр╕ер╣Мр╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И р╕Бр╕гр╕╕р╕Ур╕▓р╕ер╕нр╕Зр╣Гр╕лр╕бр╣Ир╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З");
    }
  };

  return (
    <div className="w-full min-h-screen flex flex-col bg-gradient-to-b from-yellow-50 to-yellow-200">
      <div className="container mx-auto p-4 flex-grow">
        {/* тЬЕ р╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Фр╣Ар╕нр╕Бр╕кр╕▓р╕г */}
        <div className="flex flex-col space-y-4 max-w-lg mx-auto">
          {[
            { label: "р╣С. р╕гр╕╣р╕Ыр╕Цр╣Ир╕▓р╕вр╕Вр╕Щр╕▓р╕Ф р╣С р╕Щр╕┤р╣Йр╕з", key: "profileImage" },
            { label: "р╣Т. р╕кр╕│р╣Ар╕Щр╕▓р╕Ър╕▒р╕Хр╕гр╕Ыр╕гр╕░р╕Кр╕▓р╕Кр╕Щ", key: "idCardImage" },
            { label: "р╣У. р╕кр╕│р╣Ар╕Щр╕▓р╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕Ър╣Йр╕▓р╕Щ", key: "houseRegistrationImage" },
            { label: "р╣Ф. р╕кр╕│р╣Ар╕Щр╕▓р╕зр╕╕р╕Тр╕┤р╕Бр╕▓р╕гр╕ир╕╢р╕Бр╕йр╕▓", key: "degreeCertificateImage" },
            { label: "р╣Х. р╣Гр╕Ъ Transcript", key: "transcriptImage" },
            { label: "р╣Ц. р╣Гр╕Ър╕гр╕▒р╕Ър╕гр╕нр╕Зр╕Бр╕▓р╕гр╕Чр╕│р╕Зр╕▓р╕Щ", key: "workCertificateImage" },
            { label: "р╣Ч. р╣Гр╕Ър╕гр╕▒р╕Ър╕гр╕нр╕Зр╣Бр╕Юр╕Чр╕вр╣М", key: "medicalCertificateImage" },
            { label: "р╣Ш. р╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤р╕нр╕▓р╕Кр╕Нр╕▓р╕Бр╕гр╕гр╕б", key: "criminalRecordImage" },
            { label: "р╣Щ. Passport", key: "passportImage" },
            { label: "р╣Ср╣Р. р╣Гр╕Ър╕Вр╕▒р╕Ър╕Вр╕╡р╣И", key: "drivingLicenseImage" },
          ].map(({ label, key }) => (
            <UploadBoxFrom
              key={key}
              label={label}
              onFileSelect={(file) => handleFileSelect(key, file)}
            />
          ))}
        </div>

        {/* ЁЯФ╣ р╣Ар╕кр╣Йр╕Щр╕Вр╕╡р╕Фр╕Др╕▒р╣Ир╕Щ ЁЯФ╣ */}
        <hr className="border-t-2 border-gray-300 my-8" />

        {/* тЬЕ р╣Бр╕Ър╕Ър╕Яр╕нр╕гр╣Мр╕бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╣Ир╕зр╕Щр╕Хр╕▒р╕з */}
        <div className="mb-6">
          <InputFrom onInputChange={handleInputChange} />
        </div>

        {/* тЬЕ р╕Ыр╕╕р╣Ир╕бр╕кр╕бр╕▒р╕Др╕гр╕Зр╕▓р╕Щ */}
        <div className="mt-12 flex justify-center">
          <button
            className={`py-2 px-6 rounded-lg shadow-md text-lg ${
              validateForm() ? "bg-blue-600 hover:bg-blue-700" : "bg-gray-400"
            } text-white`}
            onClick={handleSubmit}
            disabled={!validateForm()}
          >
            ЁЯУй р╕кр╕бр╕▒р╕Др╕гр╕Зр╕▓р╕Щ
          </button>
        </div>
      </div>
    </div>
  );
}

export default RegisterFromPage;
