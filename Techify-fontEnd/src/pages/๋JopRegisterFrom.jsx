import { useState, useEffect } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { registerJob } from "../api/registerJob";

const JobApplicationForm = () => {
  const navigate = useNavigate();
  const { jobId } = useParams();

  const [formData, setFormData] = useState({
    jobId: "",
    profileImage: null,
    attachedFiles: null,
    personalInfo: "",
    educationHistory: "",
    workHistory: "",
    specialSkills: "",
  });

  // ‚úÖ ‡πÉ‡∏ä‡πâ useEffect ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï jobId ‡πÄ‡∏°‡∏∑‡πà‡∏≠ URL ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
  useEffect(() => {
    if (jobId) {
      setFormData((prevState) => ({
        ...prevState,
        jobId: jobId,
      }));
    }
  }, [jobId]);

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleFileChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.files[0] });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    console.log("üìå Checking jobId before sending:", formData.jobId);

    if (!formData.jobId) {
      console.error("‚ùå jobId is missing!");
      return;
    }

    try {
      console.log("üìå Sending data to API:", formData);
      const response = await registerJob(formData);
      console.log("‚úÖ API Response:", response);
      navigate("/success");
    } catch (error) {
      console.error(
        "‚ùå Error submitting job application:",
        error.response?.data || error.message
      );
    }
  };

  return (
    <div className="container mx-auto p-4">
      <form
        onSubmit={handleSubmit}
        className="bg-white p-6 shadow-lg rounded-lg max-w-lg mx-auto"
      >
        <h2 className="text-xl font-bold mb-4 text-center">‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô</h2>

        <p className="mb-4 text-gray-600 text-center">
          ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: <b>{formData.jobId || "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î..."}</b>
        </p>

        <label className="block mb-2">
          ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå:
          <input
            type="file"
            name="profileImage"
            onChange={handleFileChange}
            className="file-input w-full"
          />
        </label>

        <label className="block mb-2">
          ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß:
          <input
            type="text"
            name="personalInfo"
            onChange={handleChange}
            className="input input-bordered w-full"
          />
        </label>

        <label className="block mb-2">
          ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤:
          <input
            type="text"
            name="educationHistory"
            onChange={handleChange}
            className="input input-bordered w-full"
          />
        </label>

        <label className="block mb-2">
          ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:
          <input
            type="text"
            name="workHistory"
            onChange={handleChange}
            className="input input-bordered w-full"
          />
        </label>

        <label className="block mb-2">
          ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡πÄ‡∏®‡∏©:
          <textarea
            name="specialSkills"
            onChange={handleChange}
            className="textarea textarea-bordered w-full"
          ></textarea>
        </label>

        <button type="submit" className="btn btn-primary w-full">
          ‡∏™‡πà‡∏á‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£
        </button>
      </form>
    </div>
  );
};

export default JobApplicationForm;
