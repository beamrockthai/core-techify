const express = require("express");
const {
  registerForJob,
  getRegisterJob,
  updateApplicationStatus,
  cancelRegisterJob,
  getAllRegisterJobs,
} = require("../../EmployeeRe/Controller/Employee.controller");

const authenticateToken = require("../../User/middleware/authMiddleware");
const uploadMiddleware = require("../../EmployeeRe/middleware/uploadMiddleware");
const router = express.Router();

// ‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô (‡∏ï‡πâ‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô)
router.post(
  "/register",
  authenticateToken, // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Token
  uploadMiddleware, // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå
  (req, res, next) => {
    console.log("‚úÖ Route /register Called - Received request:", req.body);
    console.log("‚úÖ Received files:", req.files);

    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ personalInfo ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (req.body.personalInfo) {
      try {
        // üîπ ‡πÅ‡∏õ‡∏•‡∏á personalInfo ‡∏à‡∏≤‡∏Å JSON string ‡πÄ‡∏õ‡πá‡∏ô Object
        req.body.personalInfo = JSON.parse(req.body.personalInfo);
        console.log("‚úÖ personalInfo ‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏õ‡∏•‡∏á:", req.body.personalInfo);
      } catch (error) {
        console.error("‚ùå JSON.parse() failed:", error);
        return res
          .status(400)
          .json({ error: "Invalid JSON format in personalInfo" });
      }
    } else {
      return res.status(400).json({ error: "personalInfo is missing" });
    }

    console.log("üìå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å Frontend:", req.body);
    next();
  },
  registerForJob
);

// ‚úÖ ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
router.get(
  "/getJop",
  authenticateToken,
  (req, res, next) => {
    console.log("API Called:", req.path);
    next();
  },
  getRegisterJob
);

// ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£ (Admin ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
router.put("/update/:id", authenticateToken, updateApplicationStatus);

// ‚úÖ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
router.delete("/cancelrejob/:id", authenticateToken, cancelRegisterJob);

router.get("/allregisterjob", authenticateToken, getAllRegisterJobs);
module.exports = router;
